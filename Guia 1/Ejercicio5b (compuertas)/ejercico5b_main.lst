CCS PCM C Compiler, Version 5.093, 4770               19-ago.-25 18:51

               Filename:   C:\Users\MPF\Desktop\Git\ejercico5b_main.lst

               ROM used:   81 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           18 (5%) worst case
               Stack used: 0 locations
               Stack size: 16

0000:  MOVLP  00
0001:  GOTO   02D
0002:  NOP
.................... #include <main.h>
.................... #include <16F1827.h>
.................... //////////// Standard Header file for the PIC16F1827 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F1827
0003:  BRW
0004:  RETLW  3F
0005:  RETLW  06
0006:  RETLW  5B
0007:  RETLW  4F
0008:  RETLW  66
0009:  RETLW  6D
000A:  RETLW  7D
000B:  RETLW  07
000C:  RETLW  7F
000D:  RETLW  6F
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(crystal=20000000)
*
0017:  MOVLW  20
0018:  MOVWF  05
0019:  MOVLW  03
001A:  MOVWF  04
001B:  MOVF   00,W
001C:  BTFSC  03.2
001D:  GOTO   02B
001E:  MOVLW  06
001F:  MOVWF  78
0020:  CLRF   77
0021:  DECFSZ 77,F
0022:  GOTO   021
0023:  DECFSZ 78,F
0024:  GOTO   020
0025:  MOVLW  7B
0026:  MOVWF  77
0027:  DECFSZ 77,F
0028:  GOTO   027
0029:  DECFSZ 00,F
002A:  GOTO   01E
002B:  MOVLP  00
002C:  GOTO   04B (RETURN)
.................... 
.................... 
.................... 
.................... #fuses INTRC_IO // Utilizo oscilador interno con pines RA6 y RA7 como GPIO 
.................... #fuses NOMCLR // Desactivo el MCLR 
.................... #fuses NOWDT // Desactivo el watchdog
.................... 
.................... void Init_GPIO(void);
.................... 
.................... // Tabla de conversión de hexadecimal a número
.................... const int tabla[10] = {
....................    0x3F, // 0
....................    0x06, // 1
....................    0x5B, // 2
....................    0x4F, // 3
....................    0x66, // 4
....................    0x6D, // 5
....................    0x7D, // 6
....................    0x07, // 7
....................    0x7F, // 8
....................    0x6F  // 9
.................... };
.................... 
.................... void main() {
002D:  MOVLB  03
002E:  CLRF   0C
002F:  CLRF   0D
0030:  MOVLB  02
0031:  CLRF   12
0032:  CLRF   11
0033:  CLRF   14
0034:  CLRF   13
....................    int i;
....................    Init_GPIO();
0035:  MOVLB  00
0036:  GOTO   00E
.................... 
....................    while(TRUE) {
....................       for(i = 0; i < 10; i++) {
0037:  CLRF   21
0038:  MOVF   21,W
0039:  SUBLW  09
003A:  BTFSS  03.0
003B:  GOTO   04F
....................          output_b(tabla[i]);   // Muestra número en display
003C:  MOVF   21,W
003D:  CALL   003
003E:  MOVWF  22
003F:  MOVLB  01
0040:  CLRF   0D
0041:  MOVLB  00
0042:  MOVF   22,W
0043:  MOVLB  02
0044:  MOVWF  0D
....................          delay_ms(500);        // Retardo medio segundo
0045:  MOVLW  02
0046:  MOVLB  00
0047:  MOVWF  22
0048:  MOVLW  FA
0049:  MOVWF  23
004A:  GOTO   017
004B:  DECFSZ 22,F
004C:  GOTO   048
004D:  INCF   21,F
004E:  GOTO   038
....................       }
004F:  GOTO   037
....................    }
.................... }
.................... 
0050:  SLEEP
.................... void Init_GPIO(void){
.................... 
....................    set_tris_b(0x00);  // PORTB como salida conectado al display
*
000E:  MOVLW  00
000F:  MOVLB  01
0010:  MOVWF  0D
....................    output_b(0x00);    // Apagar al inicio
0011:  CLRF   0D
0012:  MOVLB  02
0013:  CLRF   0D
0014:  MOVLP  00
0015:  MOVLB  00
0016:  GOTO   037 (RETURN)
.................... 
.................... }

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
