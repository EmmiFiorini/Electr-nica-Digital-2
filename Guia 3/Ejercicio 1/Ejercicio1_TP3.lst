CCS PCM C Compiler, Version 5.093, 4770               07-oct-25 13:20

               Filename:   C:\Users\santi\OneDrive\Escritorio\EDI2\TP3\Ejercicio1_TP3.lst

               ROM used:   525 words (13%)
                           Largest free fragment is 2048
               RAM used:   19 (5%) at main() level
                           39 (10%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 16

0000:  MOVLP  00
0001:  GOTO   1EF
0002:  NOP
*
0004:  CLRF   03
0005:  MOVLP  00
0006:  MOVLB  00
0007:  MOVF   77,W
0008:  MOVWF  20
0009:  MOVF   78,W
000A:  MOVWF  21
000B:  MOVF   79,W
000C:  MOVWF  22
000D:  MOVF   7A,W
000E:  MOVWF  23
000F:  MOVLB  03
0010:  MOVF   11,W
0011:  MOVLB  00
0012:  MOVWF  24
0013:  MOVLB  03
0014:  MOVF   12,W
0015:  MOVLB  00
0016:  MOVWF  25
0017:  MOVLB  03
0018:  MOVF   13,W
0019:  MOVLB  00
001A:  MOVWF  26
001B:  MOVLB  03
001C:  MOVF   14,W
001D:  MOVLB  00
001E:  MOVWF  27
001F:  BTFSS  0B.5
0020:  GOTO   023
0021:  BTFSC  0B.2
0022:  GOTO   03C
0023:  MOVF   20,W
0024:  MOVWF  77
0025:  MOVF   21,W
0026:  MOVWF  78
0027:  MOVF   22,W
0028:  MOVWF  79
0029:  MOVF   23,W
002A:  MOVWF  7A
002B:  MOVF   24,W
002C:  MOVLB  03
002D:  MOVWF  11
002E:  MOVLB  00
002F:  MOVF   25,W
0030:  MOVLB  03
0031:  MOVWF  12
0032:  MOVLB  00
0033:  MOVF   26,W
0034:  MOVLB  03
0035:  MOVWF  13
0036:  MOVLB  00
0037:  MOVF   27,W
0038:  MOVLB  03
0039:  MOVWF  14
003A:  RETFIE
003B:  MOVLB  00
003C:  MOVLP  00
003D:  GOTO   03E
.................... #include <Ejercicio1_TP3.h>
.................... #include <16F1827.h>
.................... //////////// Standard Header file for the PIC16F1827 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC16F1827
*
004B:  DATA C2,37
004C:  DATA F4,37
004D:  DATA 6E,10
004E:  DATA 31,1D
004F:  DATA A0,12
0050:  DATA F3,06
0051:  DATA 0A,00
0052:  RETLW  50
0053:  RETLW  55
0054:  RETLW  4C
0055:  RETLW  53
0056:  RETLW  41
0057:  RETLW  44
0058:  RETLW  4F
0059:  RETLW  00
005A:  RETLW  4E
005B:  RETLW  4F
005C:  RETLW  20
005D:  RETLW  50
005E:  RETLW  55
005F:  RETLW  4C
0060:  RETLW  53
0061:  RETLW  41
0062:  RETLW  44
0063:  RETLW  4F
0064:  RETLW  00
0065:  DATA C2,37
0066:  DATA F4,37
0067:  DATA 6E,10
0068:  DATA 32,1D
0069:  DATA A0,12
006A:  DATA F3,06
006B:  DATA 0A,00
006C:  RETLW  50
006D:  RETLW  55
006E:  RETLW  4C
006F:  RETLW  53
0070:  RETLW  41
0071:  RETLW  44
0072:  RETLW  4F
0073:  RETLW  00
0074:  RETLW  4E
0075:  RETLW  4F
0076:  RETLW  20
0077:  RETLW  50
0078:  RETLW  55
0079:  RETLW  4C
007A:  RETLW  53
007B:  RETLW  41
007C:  RETLW  44
007D:  RETLW  4F
007E:  RETLW  00
007F:  DATA C2,37
0080:  DATA F4,37
0081:  DATA 6E,10
0082:  DATA 33,1D
0083:  DATA A0,12
0084:  DATA F3,06
0085:  DATA 0A,00
0086:  RETLW  50
0087:  RETLW  55
0088:  RETLW  4C
0089:  RETLW  53
008A:  RETLW  41
008B:  RETLW  44
008C:  RETLW  4F
008D:  RETLW  00
008E:  RETLW  4E
008F:  RETLW  4F
0090:  RETLW  20
0091:  RETLW  50
0092:  RETLW  55
0093:  RETLW  4C
0094:  RETLW  53
0095:  RETLW  41
0096:  RETLW  44
0097:  RETLW  4F
0098:  RETLW  00
0099:  DATA AD,16
009A:  DATA AD,16
009B:  DATA AD,16
009C:  DATA AD,16
009D:  DATA AD,16
009E:  DATA AD,16
009F:  DATA AD,16
00A0:  DATA AD,16
00A1:  DATA AD,16
00A2:  DATA AD,16
00A3:  DATA AD,16
00A4:  DATA AD,16
00A5:  DATA 0D,05
00A6:  DATA 00,00
00A7:  MOVF   0B,W
00A8:  BCF    0B.7
00A9:  MOVLB  03
00AA:  BSF    15.7
00AB:  BSF    15.0
00AC:  NOP
00AD:  NOP
00AE:  BTFSC  09.7
00AF:  BSF    0B.7
00B0:  BTFSC  03.0
00B1:  GOTO   0DB
00B2:  MOVF   13,W
00B3:  ANDLW  7F
00B4:  MOVLB  00
00B5:  MOVWF  34
00B6:  MOVLB  03
00B7:  MOVF   11,W
00B8:  MOVLB  00
00B9:  MOVWF  35
00BA:  MOVLB  03
00BB:  MOVF   12,W
00BC:  MOVLB  00
00BD:  MOVWF  36
00BE:  MOVF   34,W
00BF:  BTFSS  11.4
00C0:  GOTO   0BF
00C1:  MOVLB  03
00C2:  MOVWF  1A
00C3:  MOVLB  00
00C4:  MOVF   35,W
00C5:  MOVLB  03
00C6:  MOVWF  11
00C7:  MOVLB  00
00C8:  MOVF   36,W
00C9:  MOVLB  03
00CA:  MOVWF  12
00CB:  MOVF   0B,W
00CC:  BCF    0B.7
00CD:  BSF    15.7
00CE:  BSF    15.0
00CF:  NOP
00D0:  NOP
00D1:  BTFSC  09.7
00D2:  BSF    0B.7
00D3:  MOVLB  00
00D4:  DECFSZ 32,F
00D5:  GOTO   0D7
00D6:  GOTO   0D9
00D7:  MOVLB  03
00D8:  GOTO   0DB
00D9:  GOTO   0FC
00DA:  MOVLB  03
00DB:  RLF    13,W
00DC:  RLF    14,W
00DD:  ANDLW  7F
00DE:  MOVLB  00
00DF:  MOVWF  34
00E0:  MOVLB  03
00E1:  MOVF   11,W
00E2:  MOVLB  00
00E3:  MOVWF  35
00E4:  MOVLB  03
00E5:  MOVF   12,W
00E6:  MOVLB  00
00E7:  MOVWF  36
00E8:  MOVF   34,W
00E9:  BTFSS  11.4
00EA:  GOTO   0E9
00EB:  MOVLB  03
00EC:  MOVWF  1A
00ED:  MOVLB  00
00EE:  MOVF   35,W
00EF:  MOVLB  03
00F0:  MOVWF  11
00F1:  MOVLB  00
00F2:  MOVF   36,W
00F3:  MOVLB  03
00F4:  MOVWF  12
00F5:  INCF   11,F
00F6:  BTFSC  03.2
00F7:  INCF   12,F
00F8:  BCF    03.0
00F9:  MOVLB  00
00FA:  DECFSZ 32,F
00FB:  GOTO   0A7
00FC:  RETURN
00FD:  MOVF   00,F
00FE:  BTFSC  03.2
00FF:  GOTO   110
0100:  MOVF   05,W
0101:  MOVWF  33
0102:  MOVF   04,W
0103:  MOVWF  32
0104:  MOVF   00,W
0105:  BTFSS  11.4
0106:  GOTO   105
0107:  MOVLB  03
0108:  MOVWF  1A
0109:  MOVLB  00
010A:  MOVF   33,W
010B:  MOVWF  05
010C:  MOVF   32,W
010D:  MOVWF  04
010E:  ADDFSR 01,FSR0
010F:  GOTO   0FD
0110:  RETURN
*
01A0:  MOVF   0B,W
01A1:  BCF    0B.7
01A2:  BSF    15.7
01A3:  BSF    15.0
01A4:  NOP
01A5:  NOP
01A6:  BTFSC  09.7
01A7:  BSF    0B.7
01A8:  MOVF   13,W
01A9:  ANDLW  7F
01AA:  BTFSC  03.2
01AB:  GOTO   1EB
01AC:  MOVLB  00
01AD:  MOVWF  31
01AE:  MOVLB  03
01AF:  MOVF   11,W
01B0:  MOVLB  00
01B1:  MOVWF  32
01B2:  MOVLB  03
01B3:  MOVF   12,W
01B4:  MOVLB  00
01B5:  MOVWF  33
01B6:  MOVF   31,W
01B7:  BTFSS  11.4
01B8:  GOTO   1B7
01B9:  MOVLB  03
01BA:  MOVWF  1A
01BB:  MOVLB  00
01BC:  MOVF   32,W
01BD:  MOVLB  03
01BE:  MOVWF  11
01BF:  MOVLB  00
01C0:  MOVF   33,W
01C1:  MOVLB  03
01C2:  MOVWF  12
01C3:  MOVF   0B,W
01C4:  BCF    0B.7
01C5:  BSF    15.7
01C6:  BSF    15.0
01C7:  NOP
01C8:  NOP
01C9:  BTFSC  09.7
01CA:  BSF    0B.7
01CB:  RLF    13,W
01CC:  RLF    14,W
01CD:  ANDLW  7F
01CE:  BTFSC  03.2
01CF:  GOTO   1EB
01D0:  MOVLB  00
01D1:  MOVWF  31
01D2:  MOVLB  03
01D3:  MOVF   11,W
01D4:  MOVLB  00
01D5:  MOVWF  32
01D6:  MOVLB  03
01D7:  MOVF   12,W
01D8:  MOVLB  00
01D9:  MOVWF  33
01DA:  MOVF   31,W
01DB:  BTFSS  11.4
01DC:  GOTO   1DB
01DD:  MOVLB  03
01DE:  MOVWF  1A
01DF:  MOVLB  00
01E0:  MOVF   32,W
01E1:  MOVLB  03
01E2:  MOVWF  11
01E3:  MOVLB  00
01E4:  MOVF   33,W
01E5:  MOVLB  03
01E6:  MOVWF  12
01E7:  INCF   11,F
01E8:  BTFSC  03.2
01E9:  INCF   12,F
01EA:  GOTO   1A0
.................... 
.................... #list
.................... 
.................... #device ADC=10
.................... #use delay(internal=4MHz)
.................... 
.................... 
.................... 
.................... #use RS232(BAUD = 9600, XMIT = PIN_B2, RCV = PIN_B1, BITS = 8, PARITY = N, STOP = 1)
.................... 
.................... #fuses INTRC_IO   // Oscilador interno con pines RA6 y RA7 como GPIO
.................... #fuses NOMCLR     // Desactivo el MCLR
.................... #fuses NOWDT      // Desactivo el watchdog
.................... 
.................... /*****************************************************************************
....................  * Funciones de Inicializacion de Perifericos
....................  ****************************************************************************/
.................... 
.................... void InitTimer0(void);
.................... void Init_GPIO(void);
.................... 
.................... /*****************************************************************************
.................... * Variables globales
.................... ****************************************************************************/
.................... 
.................... /* TIMER 0 */
.................... int contador_ms = 0;
.................... int flag_segundo = 0;
.................... 
.................... int b1 = 0;
.................... int b2 = 0;
.................... int b3 = 0;
.................... 
.................... /*****************************************************************************
.................... * Interrupciones
.................... ****************************************************************************/
.................... 
.................... #INT_TIMER0 // ACA ESCRIBO QUÉ DEBO HACER EN CADA INTERRUPCIÓN
.................... void Timer0_ISR() {
....................   
....................   set_timer0(61);
*
003E:  MOVLW  3D
003F:  MOVWF  15
....................   
....................   if(contador_ms >= 20) { //PASO 1 SEG
0040:  MOVF   28,W
0041:  SUBLW  13
0042:  BTFSC  03.0
0043:  GOTO   047
....................        contador_ms = 0;
0044:  CLRF   28
....................        flag_segundo = 1; // aviso que ya pasó el tiempo deseado
0045:  MOVLW  01
0046:  MOVWF  29
....................    }
....................    
....................    contador_ms++;
0047:  INCF   28,F
0048:  BCF    0B.2
0049:  MOVLP  00
004A:  GOTO   023
.................... }
.................... 
.................... /*****************************************************************************
.................... * Funciones
.................... ****************************************************************************/
.................... 
.................... void maquina();
.................... 
.................... void main()
*
01EF:  MOVLW  6A
01F0:  MOVLB  01
01F1:  MOVWF  19
01F2:  MOVLB  03
01F3:  BCF    1F.3
01F4:  MOVLW  19
01F5:  MOVWF  1B
01F6:  MOVLW  A6
01F7:  MOVWF  1E
01F8:  MOVLW  90
01F9:  MOVWF  1D
01FA:  MOVLB  00
01FB:  CLRF   28
01FC:  CLRF   29
01FD:  CLRF   2A
01FE:  CLRF   2B
01FF:  CLRF   2C
0200:  CLRF   2E
0201:  CLRF   2D
0202:  MOVLB  03
0203:  CLRF   0C
0204:  CLRF   0D
0205:  MOVLB  02
0206:  CLRF   12
0207:  CLRF   11
0208:  CLRF   14
0209:  CLRF   13
.................... {
.................... 
....................    while(TRUE)
....................    {
....................       maquina();
020A:  MOVLB  00
020B:  GOTO   111
020C:  GOTO   20B
....................    }
.................... 
.................... }
.................... 
020D:  SLEEP
.................... void InitTimer0(void) {
.................... 
....................     setup_timer_0(RTCC_INTERNAL|RTCC_DIV_256); // Configuro prescaler
....................     
....................     set_timer0(61);                  // Reinicio el timer --> Interrupciones cada 50ms
....................     enable_interrupts(INT_TIMER0);    // Activo Interrupcion timer0
....................     
.................... }
.................... 
.................... void Init_GPIO()
.................... {
.................... /* SETEAMOS LOS PINES PB1 COMO ENTRADA (RX), PB2 COMO SALIDA (TX) */
.................... 
....................    set_tris_a(0b11111111); 
....................    set_tris_b(0b00000000);
....................    
....................    output_low(PIN_B0);
....................    output_low(PIN_B2);
....................    output_low(PIN_B3);
....................    output_low(PIN_B4);
....................    output_low(PIN_B5);
....................    output_low(PIN_B6);
....................    output_low(PIN_B7);
.................... 
....................    output_low(PIN_A3);
....................    output_low(PIN_A4);
....................    output_low(PIN_A5);
....................    output_low(PIN_A6);
....................    output_low(PIN_A7);
....................    
....................    enable_interrupts(INT_RDA);
....................    enable_interrupts(GLOBAL);
.................... }
.................... 
.................... void maquina(void) {
.................... 
.................... b1 = input(PIN_A0);
*
0111:  MOVLB  01
0112:  BSF    0C.0
0113:  MOVLB  00
0114:  CLRF   2A
0115:  BTFSC  0C.0
0116:  INCF   2A,F
.................... b2 = input(PIN_A1);
0117:  MOVLB  01
0118:  BSF    0C.1
0119:  MOVLB  00
011A:  CLRF   2B
011B:  BTFSC  0C.1
011C:  INCF   2B,F
.................... b3 = input(PIN_A2);
011D:  MOVLB  01
011E:  BSF    0C.2
011F:  MOVLB  00
0120:  CLRF   2C
0121:  BTFSC  0C.2
0122:  INCF   2C,F
.................... 
....................    if(flag_segundo == 1) {
0123:  DECFSZ 29,W
0124:  GOTO   1ED
....................       
....................       printf("Boton 1: %s\r\n", (b1 ? "PULSADO" : "NO PULSADO")); //Operador ternario, si b1 = 1 pulsado, b = 0 no pulsado
0125:  MOVF   2A,F
0126:  BTFSC  03.2
0127:  GOTO   12C
0128:  MOVLW  00
0129:  MOVWF  7A
012A:  MOVLW  52
012B:  GOTO   12F
012C:  MOVLW  00
012D:  MOVWF  7A
012E:  MOVLW  5A
012F:  MOVWF  30
0130:  MOVF   7A,W
0131:  MOVWF  31
0132:  MOVLW  4B
0133:  MOVLB  03
0134:  MOVWF  11
0135:  MOVLW  00
0136:  MOVWF  12
0137:  BCF    03.0
0138:  MOVLW  09
0139:  MOVLB  00
013A:  MOVWF  32
013B:  CALL   0A7
013C:  MOVF   31,W
013D:  MOVWF  05
013E:  MOVF   30,W
013F:  MOVWF  04
0140:  CALL   0FD
0141:  MOVLW  0D
0142:  BTFSS  11.4
0143:  GOTO   142
0144:  MOVLB  03
0145:  MOVWF  1A
0146:  MOVLW  0A
0147:  MOVLB  00
0148:  BTFSS  11.4
0149:  GOTO   148
014A:  MOVLB  03
014B:  MOVWF  1A
....................       printf("Boton 2: %s\r\n", (b2 ? "PULSADO" : "NO PULSADO"));
014C:  MOVLB  00
014D:  MOVF   2B,F
014E:  BTFSC  03.2
014F:  GOTO   154
0150:  MOVLW  00
0151:  MOVWF  7A
0152:  MOVLW  6C
0153:  GOTO   157
0154:  MOVLW  00
0155:  MOVWF  7A
0156:  MOVLW  74
0157:  MOVWF  30
0158:  MOVF   7A,W
0159:  MOVWF  31
015A:  MOVLW  65
015B:  MOVLB  03
015C:  MOVWF  11
015D:  MOVLW  00
015E:  MOVWF  12
015F:  BCF    03.0
0160:  MOVLW  09
0161:  MOVLB  00
0162:  MOVWF  32
0163:  CALL   0A7
0164:  MOVF   31,W
0165:  MOVWF  05
0166:  MOVF   30,W
0167:  MOVWF  04
0168:  CALL   0FD
0169:  MOVLW  0D
016A:  BTFSS  11.4
016B:  GOTO   16A
016C:  MOVLB  03
016D:  MOVWF  1A
016E:  MOVLW  0A
016F:  MOVLB  00
0170:  BTFSS  11.4
0171:  GOTO   170
0172:  MOVLB  03
0173:  MOVWF  1A
....................       printf("Boton 3: %s\r\n", (b3 ? "PULSADO" : "NO PULSADO"));
0174:  MOVLB  00
0175:  MOVF   2C,F
0176:  BTFSC  03.2
0177:  GOTO   17C
0178:  MOVLW  00
0179:  MOVWF  7A
017A:  MOVLW  86
017B:  GOTO   17F
017C:  MOVLW  00
017D:  MOVWF  7A
017E:  MOVLW  8E
017F:  MOVWF  30
0180:  MOVF   7A,W
0181:  MOVWF  31
0182:  MOVLW  7F
0183:  MOVLB  03
0184:  MOVWF  11
0185:  MOVLW  00
0186:  MOVWF  12
0187:  BCF    03.0
0188:  MOVLW  09
0189:  MOVLB  00
018A:  MOVWF  32
018B:  CALL   0A7
018C:  MOVF   31,W
018D:  MOVWF  05
018E:  MOVF   30,W
018F:  MOVWF  04
0190:  CALL   0FD
0191:  MOVLW  0D
0192:  BTFSS  11.4
0193:  GOTO   192
0194:  MOVLB  03
0195:  MOVWF  1A
0196:  MOVLW  0A
0197:  MOVLB  00
0198:  BTFSS  11.4
0199:  GOTO   198
019A:  MOVLB  03
019B:  MOVWF  1A
....................       printf("------------------------\r\n");
019C:  MOVLW  99
019D:  MOVWF  11
019E:  MOVLW  00
019F:  MOVWF  12
....................       
....................       flag_segundo = 0;
*
01EB:  MOVLB  00
01EC:  CLRF   29
....................    }
01ED:  MOVLP  00
01EE:  GOTO   20C (RETURN)
.................... 
.................... }

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOPROTECT NOCPD BROWNOUT NOCLKOUT IESO FCMEN
   Word  2: 1EFF   NOWRT PLL_SW STVREN BORV19 NODEBUG NOLVP
