#include <ejercicio6.h>

#fuses INTRC_IO, NOWDT, NOMCLR


// CONFIGURACIÓN I2C 
#use i2c(MASTER, SDA=PIN_B1, SCL=PIN_B4, FAST=100000)

// dirección del LM75 (A0–A2 a GND)
#define LM75_ADDR 0x90  

// CONFIGURACIÓN UART
#use rs232(baud=9600, xmit=PIN_A0, rcv=PIN_A1, bits=8, parity=N, stop=1)

//LCD 
#define I2C_LCD_DIR 0x40
#define LCD_RS  0x01
#define LCD_RW  0x02
#define LCD_EN  0x04

void i2c_enviar_byte_LCD(int8 dato);
void lcd_enviar_4bits(int8 nibble, int1 es_texto);
void lcd_comando(int8 comando);
void lcd_texto(char letra);
void lcd_iniciar(void);
void lcd_mostrar_float(float num);

// SENSOR LM75 
float leer_temperatura_LM75(void);


void main() {
   float temperatura;

   lcd_iniciar();                        // Inicializo LCD
   lcd_comando(0x80);                    // Cursor al inicio
   printf(lcd_texto, "TEMP LM75 I2C");   // Mensaje inicial

   printf("\r\n--- Lectura LM75 ---\r\n");

   while(TRUE) {
      temperatura = leer_temperatura_LM75();   // Leo temperatura del sensor

      // Mostrar en LCD
      lcd_comando(0xC0);                // Segunda línea
      printf(lcd_texto, "Temp: ");
      lcd_mostrar_float(temperatura);
      printf(lcd_texto, " C");

      // Mostrar por UART
      printf("\r\nTemperatura: %.2f C", temperatura);

      delay_ms(1000); // Leo cada 1 segundo
   }
}


// FUNCIONES I2C PARA EL LCD

void i2c_enviar_byte_LCD(int8 dato) {
   i2c_start();
   i2c_write(I2C_LCD_DIR | 0);
   i2c_write(dato);
   i2c_stop();
}

void lcd_enviar_4bits(int8 nibble, int1 es_texto) {
   int8 byte_i2c;
   byte_i2c = (nibble << 4);
   if(es_texto) byte_i2c |= LCD_RS;

   i2c_enviar_byte_LCD(byte_i2c | LCD_EN);
   delay_us(10);
   i2c_enviar_byte_LCD(byte_i2c & ~LCD_EN);
}

void lcd_comando(int8 comando) {
   lcd_enviar_4bits(comando >> 4, 0);
   lcd_enviar_4bits(comando, 0);
   delay_ms(2);
}

void lcd_texto(char letra) {
   lcd_enviar_4bits(letra >> 4, 1);
   lcd_enviar_4bits(letra, 1);
   delay_us(40);
}

void lcd_iniciar(void) {
   delay_ms(15);
   lcd_enviar_4bits(0x03, 0);
   delay_ms(5);
   lcd_enviar_4bits(0x03, 0);
   delay_us(100);
   lcd_enviar_4bits(0x03, 0);
   delay_us(100);
   lcd_enviar_4bits(0x02, 0);
   delay_us(100);

   lcd_comando(0x28);
   lcd_comando(0x0C);
   lcd_comando(0x06);
   lcd_comando(0x01);
   delay_ms(2);
}

// Función para mostrar un número flotante en el LCD
void lcd_mostrar_float(float num) {
   int8 entero = (int8)num;
   int8 decimales = (int8)((num - entero) * 100);
   printf(lcd_texto, "%02u.%02u", entero, decimales);
}


// LECTURA DE TEMPERATURA (LM75)

float leer_temperatura_LM75(void) {
   int8 msb, lsb;
   float temperatura;

   i2c_start();
   i2c_write(LM75_ADDR);     // Dirección + bit de escritura
   i2c_write(0x00);          // Registro de temperatura
   i2c_start();              // Repetir start para leer
   i2c_write(LM75_ADDR | 1); // Dirección + bit de lectura
   msb = i2c_read();         // Parte alta
   lsb = i2c_read(0);        // Parte baja (último byte)
   i2c_stop();

   // LM75: 9 bits -> cada bit = 0.5°C
   temperatura = (float)msb;
   if(lsb & 0x80) temperatura += 0.5;

   return temperatura;
}

